{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport LocationDetail from '../../components/locations/LocationDetail';\n\nfunction LocationDetails(props) {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.locationData.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"Description\",\n        content: props.locationData.description\n      })]\n    }), /*#__PURE__*/_jsx(LocationDetail, {\n      image: props.locationData.image,\n      title: props.locationData.title,\n      address: props.locationData.address,\n      description: props.locationData.description\n    })]\n  });\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://geo:geomongo351@cluster0.gzpjq.mongodb.net/locations?retryWrites=true&w=majority\");\n  const db = client.db();\n  const locationsCollection = db.collection(\"locations\");\n  const locations = await locationsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: locations.map(location => ({\n      params: {\n        locationId: location._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const locationId = context.params.locationId;\n  const client = await MongoClient.connect(\"mongodb+srv://geo:geomongo351@cluster0.gzpjq.mongodb.net/locations?retryWrites=true&w=majority\");\n  const db = client.db();\n  const locationsCollection = db.collection(\"locations\");\n  const selectedLocation = await locationsCollection.findOne({\n    _id: ObjectId(locationId)\n  });\n  client.close();\n  return {\n    props: {\n      locationData: {\n        id: selectedLocation._id.toString(),\n        title: selectedLocation.title,\n        address: selectedLocation.address,\n        image: selectedLocation.image,\n        description: selectedLocation.description\n      }\n    }\n  };\n}\nexport default LocationDetails;","map":null,"metadata":{},"sourceType":"module"}