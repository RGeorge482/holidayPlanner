{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\35386\\\\OneDrive\\\\Desktop\\\\React\\\\holiday-planner\\\\06\\\\holiday-planner\\\\pages\\\\index.js\";\nimport Head from 'next';\nimport { MongoClient } from \"mongodb\";\nimport LocationList from \"../components/locations/LocationList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(LocationList, {\n    locations: props.locations\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://geo:geomongo351@cluster0.gzpjq.mongodb.net/locations?retryWrites=true&w=majority\");\n  const db = client.db();\n  const locationsCollection = db.collection(\"locations\");\n  const locations = await locationsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      locations: locations.map(location => ({\n        title: location.title,\n        address: location.address,\n        image: location.image,\n        id: location._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/35386/OneDrive/Desktop/React/holiday-planner/06/holiday-planner/pages/index.js"],"names":["Head","MongoClient","LocationList","HomePage","props","locations","getStaticProps","client","connect","db","locationsCollection","collection","find","toArray","close","map","location","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,sCAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,YAAD;AAAc,IAAA,SAAS,EAAEA,KAAK,CAACC;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,gGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,mBAAmB,GAAGD,EAAE,CAACE,UAAH,CAAc,WAAd,CAA5B;AAEA,QAAMN,SAAS,GAAG,MAAMK,mBAAmB,CAACE,IAApB,GAA2BC,OAA3B,EAAxB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEA,SAAS,CAACU,GAAV,CAAeC,QAAD,KAAe;AACtCC,QAAAA,KAAK,EAAED,QAAQ,CAACC,KADsB;AAEtCC,QAAAA,OAAO,EAAEF,QAAQ,CAACE,OAFoB;AAGtCC,QAAAA,KAAK,EAAEH,QAAQ,CAACG,KAHsB;AAItCC,QAAAA,EAAE,EAAEJ,QAAQ,CAACK,GAAT,CAAaC,QAAb;AAJkC,OAAf,CAAd;AADN,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAepB,QAAf","sourcesContent":["import Head from 'next'\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nimport LocationList from \"../components/locations/LocationList\";\r\n\r\nfunction HomePage(props) {\r\n  return <LocationList locations={props.locations} />;\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  // fetch data from an API\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://geo:geomongo351@cluster0.gzpjq.mongodb.net/locations?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const locationsCollection = db.collection(\"locations\");\r\n\r\n  const locations = await locationsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      locations: locations.map((location) => ({\r\n        title: location.title,\r\n        address: location.address,\r\n        image: location.image,\r\n        id: location._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}