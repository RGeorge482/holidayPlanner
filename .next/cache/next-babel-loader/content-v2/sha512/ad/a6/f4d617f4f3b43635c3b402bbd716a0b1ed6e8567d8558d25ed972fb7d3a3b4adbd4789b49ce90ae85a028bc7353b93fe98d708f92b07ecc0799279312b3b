{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\35386\\\\OneDrive\\\\Desktop\\\\React\\\\holiday-planner\\\\06\\\\holiday-planner\\\\pages\\\\[locationId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport LocationDetail from '../../components/locations/LocationDetail';\n\nfunction LocationDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LocationDetail, {\n      image: props.locationData.image,\n      title: props.locationData.title,\n      address: props.locationData.address,\n      description: props.locationData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LocationDetails;\nexport var __N_SSG = true;\nexport default LocationDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationDetails\");","map":{"version":3,"sources":["C:/Users/35386/OneDrive/Desktop/React/holiday-planner/06/holiday-planner/pages/[locationId]/index.js"],"names":["Fragment","Head","LocationDetail","LocationDetails","props","locationData","image","title","address","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAOC,cAAP,MAA2B,2CAA3B;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,sBACE,QAAC,QAAD;AAAA,2BACA,QAAC,cAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,YAAN,CAAmBC,KAD5B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,YAAN,CAAmBE,KAF5B;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACC,YAAN,CAAmBG,OAH9B;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,YAAN,CAAmBI;AAJlC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAXQN,e;;AAqET,eAAeA,eAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport {MongoClient, ObjectId} from 'mongodb'\r\n\r\nimport LocationDetail from '../../components/locations/LocationDetail';\r\n\r\nfunction LocationDetails(props) {\r\n  return (\r\n    <Fragment>\r\n    <LocationDetail\r\n      image={props.locationData.image}\r\n      title={props.locationData.title}\r\n      address={props.locationData.address}\r\n      description={props.locationData.description}\r\n    />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://geo:geomongo351@cluster0.gzpjq.mongodb.net/locations?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const locationsCollection = db.collection(\"locations\");\r\n\r\n  const locations = await locationsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: locations.map((location) => ({\r\n      params: { locationId: location._id.toString() },\r\n    })),\r\n  }; \r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n\r\n  const locationId = context.params.locationId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://geo:geomongo351@cluster0.gzpjq.mongodb.net/locations?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const locationsCollection = db.collection(\"locations\");\r\n\r\n  const selectedLocation = await locationsCollection.findOne({\r\n    _id: ObjectId(locationId),\r\n  });\r\n\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      locationData: {\r\n        id: selectedLocation._id.toString(),\r\n        title: selectedLocation.title,\r\n        address: selectedLocation.address,\r\n        image: selectedLocation.image,\r\n        description: selectedLocation.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default LocationDetails;"]},"metadata":{},"sourceType":"module"}